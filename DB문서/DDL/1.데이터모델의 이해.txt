1.데이터모델의 이해.txt


*모델링의 정의
사람이 살아가면서 나타날 수 있는 다양한 현상은
사람, 사물, 개념 등에 의해 발생된다고 할 수 있으며
모델링은 이것을 표기법에 의해 규칙을 가지고 표기하는 것 자체를 의미한다
즉 모델을 만들어가는 일 자체를 모델링으로 정의할 수 있다

현실세계 -----------------------> 모델
        추상화,단순화,명확화
(복잡한 현실세계를 일정한 표기법에 의해 표현하는 일)

*모델링의 정의 중 하나
모델이란 복잡한 현실세계를 단순화시켜 표현하는 것이다

*모델링의 특징
1)추상화는 현실세계를 일정한 형식에 맞추어 표현을 한다는 의미
즉, 다양한 현상을 일정한 양식인 표기법에 의해 표현한다는 것이다.
2)단순화는 복잡한 현실세계를 약속된 규약에 의해 제한된 표기법이나
언어로 표현하여 쉽게 이해할 수 있도록 하는 개념을 의미한다
3)명확화는 누구나 이해하기 쉽게 하기 위해 대상에 대한 애매모호함을 제거하고
정확하게 현상을 기술하는 것을 의미한다

*모델링의 세 가지 관점
데이터관점, 프로세스 관점, 데이터와 프로세스의 상관관점

(참고: 데이터 관점에서 먼저 이해하도록 진행)


2.데이터 모델의 기본 개념의 이해
데이터 모델링은 다음과 같이 정의될 수 있다
정보시스템을 구축하기 위해, 해당 업무에 어떤 데이터가 존재하는지 또는
업무가 필요로 하는 정보는 무엇인지를 분석하는 방법

*데이터 모델을 하면 좋은점
-시스템을 현재 또는 원하는 모습이 무엇인지 가시화하도록 도와준다
-시스템의 구조와 행동을 명세화(문서) 할 수 있다.
-시스템을 주축하는 과정에서 결정한 것을 확인할 수 있다(증명가능)

*데이터 모델링 유의점
1)중복
같은 데이터를 사용하는 사람, 시간, 그리고 장소를 파악하는데 도움을 준다.
이러한 지식 응용은 데이터베이스가 같은 정보를 저장하는 잘못을 하지 않도록 해야 한다
2)비유연성
어떻게 설계했느냐에 따라 사소한 업무변화에도 데이터 모델이 수시로 변경된다면
유지보수의 어려움을 가중시킬 수 있다
3)비일관성
데이터의 중복이 없더라도 비일관성은 발생한다.
개발자가 다른 데이터와 모순된다는 고려 없이 일련의 데이터를 수정할 수 있다면
위험하다. 

*
현실세계			개념적 데이터 모델링		개념세계
개체			----------------->		개념적 구조
ㅗㅜ				물리 세계(컴퓨터)			ㅜ		논리적 데이터 모델링
ㅗㅜ										ㅜ
데이터베이스	<-----------------		논리적 구조
				물리적 데이터 모델링
	(현실세계와 데이터베이스 사이의 모델)

*개념-논리-물리데이터 모델
데이터 모델링			내용												수준
개념적 데이터 모델링		추상화 수준이 높고 업무중심적이고 포괄적인 수준의 모델링 진행	    추상적
논리적 데이터 모델링		시스템으로 구축하고자 하는 업무에 대해 key, 속성, 관계 등을
					정확하게 표현, 재사용성이 높음
물리적 데이터 모델링		실제로 데이터베이스에 이식할 수 있도록 성능, 저장 등
					물리적인 성격을 고려하여 설계							구체적
					

5.프로젝트 생명주기(Life Cycle)
분석 -> 설계 -> 개발 -> 테스트 -> 전환/이행(DB) -> 정보시스템 구축



*데이터독립성 요소
외부 스키마(External Schema)
개념 스키마(Conceptual Schema)
내부 스키마(Internal Schema)

외부: 응용 프로그램(자바, 자바스크립트)
연결, 브릿지
내부: db, 데이터 저장공간

*사상(Mapping)
이것은 상호 독립적인 개념을 연결시켜주는 다리를 뜻한다
데이터 독립성에는 크게 2가지의 사상이 도출된다

1)외부/개념적 사상	:	외부적 뷰와 개념적 뷰의 상호 관련성의 정의함
2)개념적/내부적 사상 :   개념적 뷰와 저장된 데이터베이스의 상호관련성을 정의함
ex:
1)사용자가 접근하는 형식에 따라 다른 타입의 필드를 가질 수 있음.
개념적 뷰의 필드 타입은 변화가 없음

2)만약 저장된 데이터베이스 구조가 바뀐다면 개념적/내부적 사상이 바뀌어야 함
그래야 개념적 스키마가 그대로 남아있게 됨

데이터 독립성을 보장하기 위해서는 DBA가 필요할 때마다 변경해 주어야 한다
그래야 독립성이 보장된다


7.데이터 모델링의 중요한 세 가지 개념
1)업무가 관여하는 어떤 것(Things)
2)어떤 것이 가지는 성격(Attributes)
3)업무가 관여하는 어떤 것 간의 관계(Relationships)

사물이나 사건 등을 바라 볼 때 전체를 지칭하는 용어 -> 어떤 것
그 어떤 것이 가지는 세부적인 사항 -> 성격
각각의 어떤 것은 다른 어떤 것과 연관성을 가질 수 있다 -> 관계

ex:이주일과 심순애가 존재하고 둘 사이는 서로 사랑하는 연인사이이다.
이주일은 키가 180cm에 성격은 친절하고 심순애는 키가 165cm에 
세심하며 활달한 성격을 가지고 있다.

thing: 이주일, 심순애
attribute: 180cm에 친절
			165cm에 세심하며 활달한
relation: 서로 사랑하는 연인사이

*용어의 구분정의
어떤 것 : Entity(엔티티) = 테이블
어떤 것간의 연관: Relationship(관계) 
어떤 것의 성격: Attribute(속성) = 컬럼


8.데이터 모델링의 이해관계자
실제 업무시스템을 사용하는 자 = 사용자
업무시스템을 개발하는 자 = 개발자
개발자가 데이터 모델링도 같이 하게 되는 경우가 많다
그 이유는 데이터 모델링이라는 과정이 단지 db를 설계한다는 측면보다는 
업무를 이해하고 분석하여 표현하는 것이 중요하고
표현된 내용을 바탕으로 프로젝트 관련자와 의사소통하고 프로그램이나 다른 표기법과
비교 검증하는 일을 수행하는 등 많은 시간을 업무를 분석하고 설계하는데
할애하기 때문에 업무영역별 개발팀에서 보통 데이터 모델링을 진행하게 되는 것이다

대부분의 개발하는 사람들은 데이터 모델에 많은 관심을 갖지 않고 단지
프로그램을 개발하기 위한 프로그래밍 언어에만 많은 관심을 두고 애플리케이션을
개발하는 데에 많은 시간을 투자하는 경우가 많다

*데이터 모델(설계, 회의시 만날 수 있는 사람)
DBA, 프로젝트 개발자(system Engineer), 전문 모델러, 현업업무전문가(IT조금 이해하는 수준)


9.데이터 모델 표기법
ERD(Entity Relationship Diagram)

각 업무분석에서 도출된 엔티티와 엔티티간의 관계를 이해하기 쉽게 도식화된 다이어그램으로 
표시하는 방법(E-R Model)

*ERD작업순서
엔티티를 그린다 -> 엔티티를 적절하게 배치한다 -> 엔티티간의 관계를 설정한다
-> 관계명을 기술한다 -> 관계의 참여도를 기술한다 -> 관계의 필수여부를 기술한다

https://jie0025.tistory.com/112

엔티티 배치 방향: 일반적으로 왼쪽에서 오른쪽, 위에서 아래로 구성한다

